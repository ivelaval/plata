// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = env("DATABASE_PROVIDER")
  url      = env("DATABASE_URL")
}

model User {
  id           BigInt   @id @default(autoincrement())
  name         String
  email        String   @unique
  passwordHash String   @map("password_hash")
  createdAt    DateTime @default(now()) @map("created_at")

  // Relations
  accounts     Account[]
  assets       Asset[]
  liabilities  Liability[]
  budgets      Budget[]
  cycles       Cycle[]

  @@map("users")
}

model Account {
  id        BigInt   @id @default(autoincrement())
  userId    BigInt?  @map("user_id")
  name      String
  type      String
  balance   Decimal
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  user         User?         @relation(fields: [userId], references: [id])
  transactions Transaction[]

  @@map("accounts")
}

model Transaction {
  id          BigInt   @id @default(autoincrement())
  accountId   BigInt?  @map("account_id")
  amount      Decimal
  type        String
  category    String
  description String?
  date        DateTime @db.Date
  createdAt   DateTime @default(now()) @map("created_at")

  // Relations
  account Account? @relation(fields: [accountId], references: [id])

  @@map("transactions")
}

model Asset {
  id        BigInt   @id @default(autoincrement())
  userId    BigInt?  @map("user_id")
  name      String
  value     Decimal
  type      String
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  user User? @relation(fields: [userId], references: [id])

  @@map("assets")
}

model Liability {
  id        BigInt   @id @default(autoincrement())
  userId    BigInt?  @map("user_id")
  name      String
  amount    Decimal
  type      String
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  user User? @relation(fields: [userId], references: [id])

  @@map("liabilities")
}

model Budget {
  id        BigInt   @id @default(autoincrement())
  userId    BigInt?  @map("user_id")
  category  String
  amount    Decimal
  period    String
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  user User? @relation(fields: [userId], references: [id])

  @@map("budgets")
}

model Cycle {
  id        BigInt   @id @default(autoincrement())
  userId    BigInt?  @map("user_id")
  name      String
  startDate DateTime @map("start_date") @db.Date
  endDate   DateTime @map("end_date") @db.Date
  recurring Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  user User? @relation(fields: [userId], references: [id])

  @@map("cycles")
}